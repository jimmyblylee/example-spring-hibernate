<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
        http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-4.2.xsd"
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context">
    
    <context:component-scan base-package="com.lee.example.sha" />

    <context:property-placeholder location="classpath:jdbc.properties" />
    <context:annotation-config />

    <bean id="sessionFactory_A" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="packagesToScan" value="com.lee.example.h.entity" />
        <property name="jtaTransactionManager" ref="transactionManager"/>
        <property name="dataSource">
            <bean class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close" depends-on="atomikosTransactionService">
                <property name="uniqueResourceName" value="urn_A"/>
                <property name="maxPoolSize" value="50" />
                <property name="minPoolSize" value="10" />
                <property name="xaDataSource">
                    <bean class="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource">
                        <property name="pinGlobalTxToPhysicalConnection" value="true" />
                        <property name="url"><value>${jdbc.url.database.a}</value></property>
                        <property name="user"><value>${jdbc.username.database.a}</value></property>
                        <property name="password"><value>${jdbc.password.database.a}</value></property>
                    </bean>
                 </property>
            </bean>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${jdbc.hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.validator.autoregister_listeners">false</prop>
                <prop key="hibernate.connection.autocommit">false</prop>
                <prop key="hibernate.search.autoregister_listeners">false</prop>
                <prop key="hibernate.transaction.coordinator_class">jta</prop>
                <prop key="hibernate.current_session_context_class">jta</prop>
            </props>
        </property>
    </bean>

    <bean id="sessionFactory_B" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="packagesToScan" value="com.lee.example.h.entity" />
        <property name="jtaTransactionManager" ref="transactionManager"/>
        <property name="dataSource">
            <bean class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close" depends-on="atomikosTransactionService">
                <property name="uniqueResourceName" value="urn_B"/>
                <property name="maxPoolSize" value="50" />
                <property name="minPoolSize" value="10" />
                <property name="xaDataSource">
                    <bean class="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource">
                        <property name="pinGlobalTxToPhysicalConnection" value="true" />
                        <property name="url"><value>${jdbc.url.database.b}</value></property>
                        <property name="user"><value>${jdbc.username.database.b}</value></property>
                        <property name="password"><value>${jdbc.password.database.b}</value></property>
                    </bean>
                 </property>
            </bean>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${jdbc.hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.validator.autoregister_listeners">false</prop>
                <prop key="hibernate.connection.autocommit">false</prop>
                <prop key="hibernate.search.autoregister_listeners">false</prop>
                <prop key="hibernate.transaction.coordinator_class">jta</prop>
                <prop key="hibernate.current_session_context_class">jta</prop>
            </props>
        </property>
    </bean>
    
    <!-- jta transaction -->
    <bean id="atomikosTransactionService" class="com.atomikos.icatch.config.UserTransactionServiceImp" init-method="init" destroy-method="shutdownWait" />
    <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close" depends-on="atomikosTransactionService">
        <property name="forceShutdown" value="true"/>
        <property name="transactionTimeout" value="300" />
    </bean>
    <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp" depends-on="atomikosTransactionService">
        <property name="TransactionTimeout" value="300"/>
    </bean>
    <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManager" ref="atomikosTransactionManager"></property>
        <property name="userTransaction" ref="atomikosUserTransaction"></property>
        <property name="allowCustomIsolationLevels" value="true"></property>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
</beans>