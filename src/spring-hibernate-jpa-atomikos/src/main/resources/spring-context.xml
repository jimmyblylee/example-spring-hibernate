<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context.xsd"
    xmlns="http://www.springframework.org/schema/beans" 
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context">

    <context:component-scan base-package="com.lee.example.shja" />
    <context:annotation-config />

    <context:property-placeholder location="classpath:jdbc.properties" />

    <bean id="dsa_EntityManager" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="pu_A" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="database" value="MYSQL" />
            </bean>
        </property>
        <property name="jtaDataSource">
            <bean class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close" depends-on="atomikosTransactionService">
                <property name="uniqueResourceName" value="urn_A"/>
                <property name="maxPoolSize" value="50" />
                <property name="minPoolSize" value="10" />
                <property name="xaDataSource">
                    <bean class="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource">
                        <property name="pinGlobalTxToPhysicalConnection" value="true" />
                        <property name="url"><value>${jdbc.url.a}</value></property>
                        <property name="user"><value>${jdbc.username.a}</value></property>
                        <property name="password"><value>${jdbc.password.a}</value></property>
                    </bean>
                 </property>
            </bean>
        </property>
    </bean>

    <bean id="dsb_EntityManager" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="pu_B" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="database" value="MYSQL" />
            </bean>
        </property>
        <property name="jtaDataSource">
            <bean class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close" depends-on="atomikosTransactionService">
                <property name="uniqueResourceName" value="urn_B"/>
                <property name="maxPoolSize" value="50" />
                <property name="minPoolSize" value="10" />
                <property name="xaDataSource">
                    <bean class="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource">
                        <property name="pinGlobalTxToPhysicalConnection" value="true" />
                        <property name="url"><value>${jdbc.url.b}</value></property>
                        <property name="user"><value>${jdbc.username.b}</value></property>
                        <property name="password"><value>${jdbc.password.b}</value></property>
                    </bean>
                 </property>
            </bean>
        </property>
    </bean>

    <!-- jta transaction -->
    <bean id="atomikosTransactionService" class="com.atomikos.icatch.config.UserTransactionServiceImp" init-method="init" destroy-method="shutdownWait" />
    <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close" depends-on="atomikosTransactionService">
        <property name="forceShutdown" value="true"/>
        <property name="transactionTimeout" value="300" />
    </bean>
    <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp" depends-on="atomikosTransactionService">
        <property name="TransactionTimeout" value="300"/>
    </bean>
    <bean class="com.lee.example.jta.AtomikosJtaPlatform">
        <property name="transactionManager" ref="atomikosTransactionManager"/>
        <property name="transaction" ref="atomikosUserTransaction" />
    </bean>
    <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManager" ref="atomikosTransactionManager"></property>
        <property name="userTransaction" ref="atomikosUserTransaction"></property>
        <property name="allowCustomIsolationLevels" value="true"></property>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
    
    <!-- performance log -->
    <aop:aspectj-autoproxy />
    <bean class="org.perf4j.slf4j.aop.TimingAspect" />
</beans>