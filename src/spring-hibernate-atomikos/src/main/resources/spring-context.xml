<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
        http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-4.2.xsd"
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context">
    
    <context:component-scan base-package="com.lee.example.sha" />

    <context:property-placeholder location="classpath:jdbc.properties" />
    <context:annotation-config />

    <bean id="dataSource_a" class="com.atomikos.jdbc.AtomikosDataSourceBean" destroy-method="close">
        <description>test datasource for database a</description>
        <property name="uniqueResourceName" value="ds_a"/>
        <property name="xaDataSourceClassName"><value>${jdbc.xaDataSourceClassName}</value></property>
        <property name="xaProperties">
            <props>
                <prop key="url">${jdbc.url.database.a}</prop>
                <prop key="user">${jdbc.username.database.a}</prop>
                <prop key="password">${jdbc.password.database.a}</prop>
            </props>
        </property>
        <property name="poolSize" value="3" />
        <property name="reapTimeout" value="20000" />
    </bean>
    <bean id="dataSource_b" class="com.atomikos.jdbc.AtomikosDataSourceBean" destroy-method="close">
        <description>test datasource for database b</description>
        <property name="uniqueResourceName" value="ds_b"/>
        <property name="xaDataSourceClassName"><value>${jdbc.xaDataSourceClassName}</value></property>
        <property name="xaProperties">
            <props>
                <prop key="URL">${jdbc.url.database.b}</prop>
                <prop key="user">${jdbc.username.database.b}</prop>
                <prop key="password">${jdbc.password.database.b}</prop>
            </props>
        </property>
        <property name="poolSize" value="3" />
        <property name="reapTimeout" value="20000" />
    </bean>

    <bean id="sessionFactory_A" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource_a" />
        <property name="packagesToScan">
            <list>
                <value>com.lee.example.h.entity</value>
            </list>
        </property>
        <property name="jtaTransactionManager" ref="atomikosTransactionManager"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${jdbc.hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.connection.autocommit">false</prop>
                <prop key="hibernate.transaction.coordinator_class">jta</prop>
            </props>
        </property>
    </bean>

    <bean id="sessionFactory_B" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource_b" />
        <property name="packagesToScan">
            <list>
                <value>com.lee.example.h.entity</value>
            </list>
        </property>
        <property name="jtaTransactionManager" ref="atomikosTransactionManager"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${jdbc.hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.connection.autocommit">false</prop>
                <prop key="hibernate.transaction.coordinator_class">jta</prop>
            </props>
        </property>
    </bean>
    
    <!-- jta transaction -->
    <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager">
        <property name="forceShutdown" value="true"/>
    </bean>
    <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
        <property name="TransactionTimeout" value="15"/>
    </bean>
    <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManager" ref="atomikosTransactionManager"></property>
        <property name="userTransaction" ref="atomikosUserTransaction"></property>
        <property name="allowCustomIsolationLevels" value="true"></property>
    </bean>
    <tx:annotation-driven/>
    
   <!-- translate hibernate exception into spring exception, and make exception more kindfull, All @Repository annotated Dao will be proxied
   <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" /> -->
</beans>